name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Install project
      run: poetry install --no-interaction

    - name: Run unit tests only (exclude e2e, integration, manual, mongo)
      run: |
        poetry run pytest \
          -v \
          --tb=short \
          -m "not e2e and not integration and not manual and not mongo" \
          --maxfail=10 \
          tests/

    - name: Run specific safe test files
      run: |
        poetry run pytest \
          -v \
          --tb=short \
          tests/core/services/test_task_execution_service.py \
          tests/core/services/test_agent_storage_service.py \
          tests/core/test_prompt_engine.py \
          tests/core/services/test_configuration_service.py \
          tests/core/services/test_tool_management_service.py \
          tests/core/services/test_session_management_service.py \
          tests/core/services/test_storage_service.py \
          tests/test_argument_parser.py