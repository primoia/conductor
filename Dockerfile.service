# Stage 1: Builder
FROM python:3.10-slim-bullseye AS builder

# Instalar poetry
RUN pip install poetry

# Configurar o ambiente
ENV POETRY_NO_INTERACTION=1 \
    POETRY_VIRTUALENVS_IN_PROJECT=1 \
    POETRY_VIRTUALENVS_CREATE=1 \
    POETRY_CACHE_DIR=/tmp/poetry_cache

WORKDIR /app

# Copiar arquivos de dependência e instalar
COPY pyproject.toml poetry.lock ./
RUN poetry install --no-dev && mv .venv /opt/venv

# Copiar código-fonte
COPY src ./src

# ---

# Stage 2: Final Image
FROM python:3.10-slim-bullseye

# Criar usuário não-root
RUN useradd --create-home appuser
USER appuser
WORKDIR /home/appuser/app

# Copiar ambiente virtual e código-fonte do builder
COPY --from=builder /opt/venv /opt/venv
COPY --from=builder /app/src ./src

# Ativar o ambiente virtual
ENV PATH="/opt/venv/bin:$PATH"

# Placeholder para o comando de inicialização do serviço
# Será atualizado quando o serviço tiver um ponto de entrada executável
CMD ["python", "-c", "print('Conductor Service - Ponto de Entrada a ser implementado')"]